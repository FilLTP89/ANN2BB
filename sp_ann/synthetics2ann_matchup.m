%===============
% Spectral Matching: synthetics vs ann
% Editor: Filippo Gatti
% CentraleSup√©lec - Laboratoire MSSMat
% DICA - Politecnico di Milano
% Copyright 2016
% NOTES
% synthetics2ann_matchup: function to match the low-frequency synthetics' spectra
% from numerical simulations (SPEED/HISADA) to target spectra obtained via
% Artificial Neural Networks.
% INPUT:
% OUTPUT:
% N.B. Need for ccc.m,plot_set_up.m,ns_parser.m,ns_spectra.m,sp_generator.m,
% sp_spectra.m,lfhf_mashup.m,nn_parser.m,nn_simulation.m,synthetics2ann_spectral_matching.m
%===============
%==========================================================================
% SET-UP
%==========================================================================
%--------------------------------------------------------------------------
% general
%--------------------------------------------------------------------------
ccc;[xtf,xlf,xtT,xlT]=plot_set_up;
%--------------------------------------------------------------------------
%--------------------------------------------------------------------------
% workdir
%--------------------------------------------------------------------------
wd = fullfile(filesep,'media','filippo','Data','Filippo','PHD_heavyweight',...
    'EMILIA_2905');
% wd = fullfile(filesep,'media','filippo','Data','Filippo','PHD_passing_through',...
%     'WORKDIR','HISADA','nco_eq','postprocess','hisada','shiba','nigh12');
%==========================================================================
%==========================================================================
% PARSING RECORDS
%==========================================================================
%--------------------------------------------------------------------------
% monitors
%--------------------------------------------------------------------------
% path to monitor files
mon.pt  = fullfile(wd,'monitor');
% mon.pt  = fullfile(wd,'opm4');
% metadata filename
mon.fn  = fullfile(wd,'SM_Stations_Monitors.csv');
% mon.fn  = fullfile(wd,'SM_Stations_Monitors_Hisada.csv');
% type of monitor (S,H)
mon.tp  = 'S';
% mon.tp  = 'H';
% monitor identity
mon.id  = [3695;16928];
% mon.id  = 1;
% number of monitors
mon.na  = numel(mon.id);                       
% monitor recorded time-history (a,v,d)
mon.rc  = {'d'};
% mon.rc  = {'v'};
% number of records
mon.nr  = numel(mon.rc);                        
% motion component (x,y,z)
mon.cp  = {'x','y','z'};
% number of components
mon.nc  = numel(mon.cp);
%--------------------------------------------------------------------------
%--------------------------------------------------------------------------
% parse simulations 
%--------------------------------------------------------------------------
[mon,nss] = ns_parser(mon);
%--------------------------------------------------------------------------
%--------------------------------------------------------------------------
% compute spectra
%--------------------------------------------------------------------------
nss = ns_spectra(nss);
%==========================================================================
%==========================================================================
% SABETTA & PUGLIESE SYNTHETICS
%==========================================================================
%--------------------------------------------------------------------------
% generate SP synthetics
%--------------------------------------------------------------------------
sps = sp_generator(nss.mon,fullfile(wd,'prova.dat'));
%--------------------------------------------------------------------------
%--------------------------------------------------------------------------
% compute spectra
%--------------------------------------------------------------------------
sps = sp_spectra(sps);
%==========================================================================
%==========================================================================
% LF-HF HYBRIDIZATION
%==========================================================================
hbs = lfhf_mashup(nss,sps);
%==========================================================================
%==========================================================================
% ANN - DATABASE
%==========================================================================
%--------------------------------------------------------------------------
% parse trained ann network
%--------------------------------------------------------------------------
ann = nn_parser(0.75,fullfile(wd,'training','net_075s.mat'));
%--------------------------------------------------------------------------
%--------------------------------------------------------------------------
% train network on hybrid accelerograms
%--------------------------------------------------------------------------
nns = ann2hbs_train(ann,hbs);
%==========================================================================
%==========================================================================
% SPECTRAL MATCHING
%==========================================================================
synthetics2ann_spectral_matching(hbs,nns);
%==========================================================================