# Source/Build Folders and targets
SRCDIR=src
BUILDDIR=build
# Macros
SRCS=$(wildcard $(SRCDIR)/*.f90)
OBJS=$(patsubst $(SRCDIR)/%.f90,$(BUILDDIR)/%.o,$(SRCS))
COBJS += $(BUILDDIR)/SPEED_FIELDS.o $(BUILDDIR)/MODULES.o
#
EXEC=SPEED2D
RM:= rm -rf
# The compiler
FC_PC=gfortran
# flags for debugging or for maximum performance, comment as necessary
LD_PC_FLAGS=-O3 -fopenmp -lgomp
FC_PC_FLAGS=-O3 -g -c  -ffree-form -ffree-line-length-none -fopenmp -fbounds-check -J build 

# Dependencies
#$(BUILDDIR)/%.o : $(COBJS)
#$(BUILDDIR)/TIME_LOOP_EL.o : $(COBJS) $(BUILDDIR)/WRITE_MONITORS.o $(BUILDDIR)/SEISMIC_FORCES.o
#$(BUILDDIR)/TIME_LOOP_NL.o : $(COBJS) $(BUILDDIR)/WRITE_MONITORS.o $(BUILDDIR)/SEISMIC_FORCES.o $(BUILDDIR)/NONLINEAR.o
$(BUILDDIR)/NONLINEAR.o : $(COBJS)   
$(BUILDDIR)/SEISMIC_FORCES.o : $(COBJS)   
$(BUILDDIR)/WRITE_MONITORS.o : $(COBJS)   
# Make all instructions
.PHONY: all
all: dir $(BUILDDIR)/$(EXEC) 

dir:
	-mkdir -p $(BUILDDIR)


$(BUILDDIR)/$(EXEC): $(OBJS)
	@echo 'oggetto'
	@echo '$<'
	$(FC_PC) $(LD_PC_FLAGS) -o $@ $(OBJS) 
	@echo '$@'

$(BUILDDIR)/%.o: $(SRCDIR)/%.f90 $(COBJS)
	@echo 'moduli'
	@echo '$<'
	$(FC_PC) $(FC_PC_FLAGS) $< -o $@
	@echo '$@'


# Make clean instructions
.PHONY: clean
clean:
	-rm -fr $(BUILDDIR)/*.o $(BUILDDIR)/*.mod
